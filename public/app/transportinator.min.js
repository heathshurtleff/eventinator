"use strict";"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then(function(t){console.log("ServiceWorker registration successful with scope: "+t.scope)})["catch"](function(t){console.log("ServiceWorker registration failed: ",t)});angular.module("transportinator",["ui.router","ngResource"]);angular.module("transportinator").config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/");t.state("routes",{url:"/",templateUrl:"app/transport/routes.html",controller:"routesController"}).state("route",{url:"/route/:id",templateUrl:"app/transport/routeInfo.html",controller:"routeInfoController"})}]);!function(){function t(t){return Array.prototype.slice.call(t)}function e(t){return new Promise(function(e,n){t.onsuccess=function(){e(t.result)};t.onerror=function(){n(t.error)}})}function n(t,n,r){var o,i=new Promise(function(i,u){o=t[n].apply(t,r);e(o).then(i,u)});i.request=o;return i}function r(t,e,r){var o=n(t,e,r);return o.then(function(t){return t?new c(t,o.request):void 0})}function o(t,e,n){n.forEach(function(n){Object.defineProperty(t.prototype,n,{get:function(){return this[e][n]}})})}function i(t,e,r,o){o.forEach(function(o){o in r.prototype&&(t.prototype[o]=function(){return n(this[e],o,arguments)})})}function u(t,e,n,r){r.forEach(function(r){r in n.prototype&&(t.prototype[r]=function(){return this[e][r].apply(this[e],arguments)})})}function a(t,e,n,o){o.forEach(function(o){o in n.prototype&&(t.prototype[o]=function(){return r(this[e],o,arguments)})})}function s(t){this._index=t}function c(t,e){this._cursor=t;this._request=e}function p(t){this._store=t}function f(t){this._tx=t;this.complete=new Promise(function(e,n){t.oncomplete=function(){e()};t.onerror=function(){n(t.error)}})}function d(t,e,n){this._db=t;this.oldVersion=e;this.transaction=new f(n)}function l(t){this._db=t}o(s,"_index",["name","keyPath","multiEntry","unique"]);i(s,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);a(s,"_index",IDBIndex,["openCursor","openKeyCursor"]);o(c,"_cursor",["direction","key","primaryKey","value"]);i(c,"_cursor",IDBCursor,["update","delete"]);["advance","continue","continuePrimaryKey"].forEach(function(t){t in IDBCursor.prototype&&(c.prototype[t]=function(){var n=this,r=arguments;return Promise.resolve().then(function(){n._cursor[t].apply(n._cursor,r);return e(n._request).then(function(t){return t?new c(t,n._request):void 0})})})});p.prototype.createIndex=function(){return new s(this._store.createIndex.apply(this._store,arguments))};p.prototype.index=function(){return new s(this._store.index.apply(this._store,arguments))};o(p,"_store",["name","keyPath","indexNames","autoIncrement"]);i(p,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getAllKeys","count"]);a(p,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);u(p,"_store",IDBObjectStore,["deleteIndex"]);f.prototype.objectStore=function(){return new p(this._tx.objectStore.apply(this._tx,arguments))};o(f,"_tx",["objectStoreNames","mode"]);u(f,"_tx",IDBTransaction,["abort"]);d.prototype.createObjectStore=function(){return new p(this._db.createObjectStore.apply(this._db,arguments))};o(d,"_db",["name","version","objectStoreNames"]);u(d,"_db",IDBDatabase,["deleteObjectStore","close"]);l.prototype.transaction=function(){return new f(this._db.transaction.apply(this._db,arguments))};o(l,"_db",["name","version","objectStoreNames"]);u(l,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(e){[p,s].forEach(function(n){n.prototype[e.replace("open","iterate")]=function(){var n=t(arguments),r=n[n.length-1],o=(this._store||this._index)[e].apply(this._store,n.slice(0,-1));o.onsuccess=function(){r(o.result)}}})});[s,p].forEach(function(t){t.prototype.getAll||(t.prototype.getAll=function(t,e){var n=this,r=[];return new Promise(function(o){n.iterateCursor(t,function(t){if(t){r.push(t.value);void 0===e||r.length!=e?t["continue"]():o(r)}else o(r)})})})});var h={open:function(t,e,r){var o=n(indexedDB,"open",[t,e]),i=o.request;i.onupgradeneeded=function(t){r&&r(new d(i.result,t.oldVersion,i.transaction))};return o.then(function(t){return new l(t)})},"delete":function(t){return n(indexedDB,"deleteDatabase",[t])}};"undefined"!=typeof module?module.exports=h:self.idb=h}();angular.module("transportinator").factory("idbService",function(){return{getDatabase:function(){return navigator.serviceWorker?idb.open("transport",6,function(t){switch(t.oldVersion){case 0:case 1:case 2:case 3:case 4:case 5:t.createObjectStore("routes");t.createObjectStore("selectedRoute");t.createObjectStore("routeStops")}}):void 0},getRoutes:function(){var t=this.getDatabase();return t?t.then(function(t){var e=t.transaction("routes","readwrite"),n=e.objectStore("routes");return n.getAll()}):void 0},saveRoutes:function(t){var e=this.getDatabase();return e?e.then(function(e){var n=e.transaction("routes","readwrite"),r=n.objectStore("routes");t.forEach(function(t){r.put(t,t.route_id)});return n.complete}):void 0},getRouteStops:function(t,e){var n=this.getDatabase();if(n){var r="N";0!==parseInt(e)&&(r="S");return n.then(function(e){var n=e.transaction("routeStops","readwrite"),o=n.objectStore("routeStops");return o.get(t+r)})}},saveRouteStops:function(t,e,n){var r=this.getDatabase();if(r){var o="N";0!==parseInt(e)&&(o="S");return r.then(function(e){var r=e.transaction("routeStops","readwrite"),i=r.objectStore("routeStops"),u={route_id:t,stops:n};i.put(u,t+o);return r.complete})}},getSpecificRoute:function(t,e){var n=this.getDatabase();if(n){var r="N";0!==parseInt(e)&&(r="S");return n.then(function(e){var n=e.transaction("selectedRoute","readwrite"),o=n.objectStore("selectedRoute");return o.get(t+r)})}},saveSpecificRoute:function(t,e,n){var r=this.getDatabase();if(r){var o="N";0!==parseInt(e)&&(o="S");return r.then(function(e){var r=e.transaction("selectedRoute","readwrite"),i=r.objectStore("selectedRoute"),u={route_id:t,trips:n};return i.put(u,t+o)})}}}});angular.module("transportinator").controller("routeInfoController",["$scope","$filter","$stateParams","routesService","idbService",function(t,e,n,r,o){function i(){function e(){r.getTripsForRoute(t.routeId,t.tripDirection).then(function(e){s=e;i().then(function(){var r=t.stops.length,i=_.sortBy(e,function(t){return t.stoptimes[0].departure_time});_.each(i,function(e){var n=[];if(e.stoptimes.length!==r){_.each(t.stops,function(t,r){var o=_.find(e.stoptimes,function(e){return e.stop_id===t.stop_id});o?n[r]=o:n[r]={stop_id:t.stop_id,departure_time:"--"}});e.stoptimes=n}});t.$apply(function(){t.trips=i;o.saveSpecificRoute(t.routeId,t.tripDirection,i);parseInt(n.id)<=6&&-1===n.id.indexOf("X")&&u()})})})}function i(){function t(o){c++;o?r.getStopTimesByTrip(o.trip_id).then(function(e){o.stoptimes=e;t(s[c])})["catch"](function(t){n(t)}):e()}var e,n,o=new Promise(function(t,r){e=t;n=r});t(s[c]);return o}var a=o.getSpecificRoute(t.routeId,t.tripDirection);a.then(function(r){void 0===r?e():t.$apply(function(){t.trips=r.trips;parseInt(n.id)<=6&&-1===n.id.indexOf("X")&&u()})});var s,c=0}function u(){r.getRouteUpdate(t.routeId).then(function(n){t.$apply(function(){t.hasRealtimeAccess=!0;t.lastUpdate=n.timestamp});a.removeClass("updated-time");_.each(n.entities,function(t){var n,r,o;if(t.trip_update){n=t.trip_update;r=n.trip.trip_id;o=$('tr[data-trip-id*="'+r+'"]');_.each(n.stop_time_update,function(t){var n,r,i=o.find('td[data-stop-id="'+t.stop_id+'"]'),u=new Date,a=480,s=a-u.getTimezoneOffset();if(t.departure){n=new Date(1e3*t.departure.time.low+60*s*1e3);r=e("date")(n,"HH:mm:ss");i.addClass("updated-time");i.text(r)}})}});setTimeout(u,6e3)})["catch"](function(){t.hasRealtimeAccess=!1})}var a=$(".route-times-table td");t.routeId=n.id;t.hasRealtimeAccess=!1;t.getStops=function(){var e=o.getRouteStops(t.routeId,t.tripDirection);e.then(function(e){if(e&&0!==e.length){t.stops=e.stops;i()}else r.getStopsForRoute(t.routeId,t.tripDirection).then(function(e){t.stops=e;o.saveRouteStops(t.routeId,t.tripDirection,e);i()})})};t.getAvailableEndStops=function(){var e,n=_.findIndex(t.stops,function(e){return e.stop_id===t.tripStart});e=_.rest(t.stops,n+1);t.endStops=e;$(".route-times-table th").each(function(e,n){var r=$(n);r.attr("data-stop-id")!==t.tripStart?r.hide():r.show()});$(".route-times-table td").each(function(e,n){var r=$(n);r.attr("data-stop-id")!==t.tripStart?r.hide():r.show()})};t.displayStopTimes=function(){$(".route-times-table th").each(function(e,n){var r=$(n);r.attr("data-stop-id")!==t.tripStart&&r.attr("data-stop-id")!==t.tripEnd?r.hide():r.show()});$(".route-times-table td").each(function(e,n){var r=$(n);r.attr("data-stop-id")!==t.tripStart&&r.attr("data-stop-id")!==t.tripEnd?r.hide():r.show()})}}]);angular.module("transportinator").controller("routesController",["$scope","$location","routesService",function(t,e,n){n.getAllRoutes().then(function(e){t.$apply(function(){t.routes=e})});t.fetchRouteUpdate=function(t){e.path("/route/"+t)}}]);angular.module("transportinator").factory("routesService",["idbService",function(t){var e;return{getAllRoutes:function(){return void 0!==e?e:new Promise(function(e,n){t.getRoutes().then(function(r){r.length>0?e(r):fetch("/app/mtaData").then(function(t){return t.json()}).then(function(r){r||n("No routes found");t.saveRoutes(r).then(function(){e(r)})})["catch"](function(t){n(t)})})})},getAllStops:function(){return fetch("/app/mtaStops").then(function(t){return t.json()}).then(function(t){return t})},getStopsForRoute:function(t,e){return fetch("/app/mtaStops/"+t+"/"+e).then(function(t){return t.json()}).then(function(t){return t})},getTripsForRoute:function(t,e){return fetch("/app/mtaTrips/"+t+"/"+e).then(function(t){return t.json()}).then(function(t){return t})},getStopTimesByTrip:function(t){return fetch("/app/mtaStopTimes/trip/"+t).then(function(t){return t.json()}).then(function(t){return t})},getStoptimesForStop:function(t,e,n){return fetch("/app/mtaStopTimes/"+t+"/"+e+"/"+n).then(function(t){return t.json()}).then(function(t){return t})["catch"](function(t){console.log(t)})},getRouteUpdate:function(t){return fetch("/app/mtaUpdate/"+t).then(function(t){return t.json()})["catch"](function(t){console.log(t)}).then(function(e){var n={};n.timestamp=(new Date).getTime();var r=_.filter(e.entity,function(e){var n=!1;e.trip_update?e.trip_update.trip.route_id===t&&(n=!0):e.vehicle&&e.vehicle.trip.route_id===t&&(n=!0);return n});n.entities=r;return n})}}}]);angular.module("transportinator").factory("tripsService",[function(){var t,e={getAllTrips:function(){return fetch("/app/utaTrips").then(function(t){return t.json()}).then(function(e){t=e;return t})},getTripData:function(t){return fetch("/app/utaFullTrip/"+t).then(function(t){return t.json()})}};return e}]);
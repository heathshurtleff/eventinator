"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then(function(t){console.log("ServiceWorker registration successful with scope: "+t.scope)})["catch"](function(t){console.log("ServiceWorker registration failed: ",t)});angular.module("transportinator",["ui.router","ngResource"]);angular.module("transportinator").config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/");t.state("routes",{url:"/",templateUrl:"app/transport/routes.html",controller:"routesController"}).state("route",{url:"/route/:id",templateUrl:"app/transport/routeInfo.html",controller:"routeInfoController"})}]);angular.module("transportinator").controller("routeInfoController",["$scope","$filter","$stateParams","routesService",function(t,e,n,r){function o(){r.getRouteUpdate(t.routeId).then(function(n){t.$apply(function(){t.lastUpdate=n.timestamp});i.removeClass("updated-time");_.each(n.entities,function(t){var n,r,o;if(t.trip_update){n=t.trip_update;r=n.trip.trip_id;o=$('tr[data-trip-id*="'+r+'"]');_.each(n.stop_time_update,function(t){var n,r,i=o.find('td[data-stop-id="'+t.stop_id+'"]'),u=new Date,a=480,s=a-u.getTimezoneOffset();if(t.departure){n=new Date(1e3*t.departure.time.low+60*s*1e3);r=e("date")(n,"HH:mm:ss");i.addClass("updated-time");i.text(r)}})}});setTimeout(o,6e3)})}var i=$(".route-times-table td");t.routeId=n.id;r.getStopsForRoute(t.routeId).then(function(e){t.$apply(function(){t.stops=e})});r.getTripsForRoute(t.routeId).then(function(e){var n=t.stops.length,r=_.sortBy(e,function(t){return t.stoptimes[0].departure_time});_.each(r,function(e){var r=[];if(e.stoptimes.length!==n){_.each(t.stops,function(t,n){var o=_.find(e.stoptimes,function(e){return e.stop_id===t.stop_id});o?r[n]=o:r[n]={departure_time:"--"}});e.stoptimes=r}});t.$apply(function(){t.trips=r;o()})})}]);angular.module("transportinator").controller("routesController",["$scope","$location","routesService",function(t,e,n){t.testvar="Itsa Work!";n.getAllRoutes().then(function(e){t.$apply(function(){t.routes=e})});t.fetchRouteUpdate=function(t){parseInt(t)<=6&&e.path("/route/"+t)}}]);angular.module("transportinator").factory("routesService",function(){var t;return{getAllRoutes:function(){return void 0!==t?t:fetch("/app/mtaData").then(function(t){return t.json()}).then(function(e){t=new Promise(function(t,n){e||n("No routes found");t(e)});return e})["catch"](function(t){console.log(t)})},getAllStops:function(){return fetch("/app/mtaStops").then(function(t){return t.json()}).then(function(t){return t})},getStopsForRoute:function(t){return fetch("/app/mtaStops/"+t).then(function(t){return t.json()}).then(function(t){return t})},getTripsForRoute:function(t){return fetch("/app/mtaTrips/"+t).then(function(t){return t.json()}).then(function(t){return t}).then(function(t){return new Promise(function(e,n){t&&0!==t.length||n("No trips found!");_.each(t,function(n){fetch("/app/mtaStopTimes/trip/"+n.trip_id).then(function(t){return t.json()}).then(function(r){n.stoptimes=r;t.indexOf(n)+1===t.length&&e(t)})})})})},getStopTimesByTrip:function(t){return fetch("/app/mtaStopTimes/trip/"+t).then(function(t){return t.json()}).then(function(t){return t})},getRouteUpdate:function(t){return fetch("/app/mtaUpdate/"+t).then(function(t){return t.json()}).then(function(e){var n={};n.timestamp=(new Date).getTime();var r=_.filter(e.entity,function(e){var n=!1;e.trip_update?e.trip_update.trip.route_id===t&&(n=!0):e.vehicle&&e.vehicle.trip.route_id===t&&(n=!0);return n});n.entities=r;return n})}}});angular.module("transportinator").factory("tripsService",[function(){var t,e={getAllTrips:function(){return fetch("/app/utaTrips").then(function(t){return t.json()}).then(function(e){t=e;return t})},getTripData:function(t){return fetch("/app/utaFullTrip/"+t).then(function(t){return t.json()})}};return e}]);